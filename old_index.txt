<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Haddock Spoilage Detection</title>
  <!-- Styling for the upload container, placeholder, and button -->
  <style>
    /* Styles for the title*/
    .title {
      display:flex;
      justify-content: center;
      align-items: center;
      margin: 0;
      font-family: Arial, sans-serif; 
      height: 48px
    }

    /* Styles for prediction text*/
    .pred {
      display:flex;
      justify-content: center;
      align-items: center;
      margin: 0;
      font-family: Arial, sans-serif; 
      height: 24px;
      padding: 40px 5px 10px;
    }

    /* Styles for confidence text*/
    .conf {
      display:flex;
      justify-content: center;
      align-items: center;
      margin: 0;
      font-family: Arial, sans-serif; 
      height: 24px;
      padding: 10px;
    }

    /* Styles for the upload container */
    .upload-container {
      display: flex;
      flex-direction: column;
      align-items: center;
      margin-top: 50px;
    }

    /* Styles for the upload placeholder */
    .upload-placeholder {
      width: 300px;
      height: 300px;
      border: 2px dashed #ccc;
      display: flex;
      align-items: center;
      justify-content: center;
      margin-bottom: 20px;
    }

    /* Styles for the uploaded image within the placeholder */
    .upload-placeholder img {
      max-width: 100%;
      max-height: 100%;
    }

    /* Styles for the upload button */
    .upload-button {
      padding: 10px 20px;
      background-color: #007bff;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }
  </style>
</head>
<body>

  <div class="title">
    <h1>Haddock Spoilage Detection</h1>
  </div>

  <!-- Container for the upload elements -->
  <div class="upload-container">
    <!-- Placeholder for the uploaded file or message -->
    <div class="upload-placeholder" id="filePlaceholder">
      <!-- Initial message before file upload -->
      <span>Upload a PNG or JPEG file</span>
    </div>
    <!-- Hidden file input element -->
    <input type="file" id="fileInput" accept=".png, .jpeg, .jpg" style="display:none;">
    <!-- Button to trigger file upload -->
    <button class="upload-button" onclick="document.getElementById('fileInput').click();">Upload File</button>
  </div>

  <div class="pred">
    <p>Prediction: _______</p>
  </div>
  
  <div class="conf">
    <p>Confidence: _____ %</p>
  </div>


  <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@1.2.11/dist/tf.min.js"></script>
  <!-- LOAD OUR CLASSES -->
  <script src="model.js"></script>

  <!-- JavaScript code to handle file upload -->
  <script>
    // Event listener for changes in the file input element
    document.getElementById('fileInput').addEventListener('change', function(event) {
      // Get the selected file
      const file = event.target.files[0];
      // Check if a file is selected and it's a PNG or JPEG file
      if (file && (file.type === 'image/png' || file.type === 'image/jpeg')) {
        // Create a FileReader object to read the file
        const reader = new FileReader();
        // Function to execute when the file is read successfully
        reader.onload = function(e) {
          // Get the file placeholder element
          const filePlaceholder = document.getElementById('filePlaceholder');
          // Display the uploaded image in the placeholder
          filePlaceholder.innerHTML = '<img src="' + e.target.result + '" alt="Uploaded File">';
        }
        // Read the file as a data URL
        reader.readAsDataURL(file);
      } else {
        // Alert the user if an invalid file is selected
        alert('Please upload a valid PNG or JPEG file.');
      }
    });
  </script>
  
</body>
</html>
